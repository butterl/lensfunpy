language: objective-c

env:
  global:
    #- LATEST_TAG=1
    # PYPI_PASS for deployment
    - secure: "T1YdcumN8SrCgxOT6XWJ4uDcul4uNszdhZiKkEoslAge5nODTfvhqYs1bMHtFuplBYkhYLS3ZQ3wx+m0C41qp5fG+b8eV2dT+uC26kG2Z4euKztzcJLhEdFXVQAODvHEPlcnESjqG+795iBzOFkL6bWi2XA7EGdNs8XkHvK208Q="
  matrix:
    - VERSION=2.7.8
    - VERSION=3.4.1
    - VERSION=3.5.0
    
matrix:
  fast_finish: true

install:
  - cd terryfy && git fetch && git checkout master && cd ..
  - source terryfy/travis_tools.sh
  - travis_retry get_python_environment macpython $VERSION venv
  - if [ -n "$LATEST_TAG" ]; then 
      checkout_closest_tag lensfunpy ;
    else
      cd lensfunpy ;
      git fetch ;
      git checkout -f master ;
      git log -n 1 ;
      cd .. ;
    fi
  - cd lensfunpy
  - travis_retry pip install -r dev-requirements.txt
  - travis_retry brew update
  - travis_retry brew install --universal glib
  - brew link --force gettext
  - export CC=clang
  - export CXX=clang++
  - export CFLAGS="-arch i386 -arch x86_64"
  - export CXXFLAGS=$CFLAGS
  - export LDFLAGS=$CFLAGS
  - export ARCHFLAGS=$CFLAGS
  - python setup.py bdist_wheel
  - travis_retry pip install delocate
  - delocate-listdeps --all dist/*.whl # lists library dependencies
  - delocate-wheel --require-archs=intel dist/*.whl # copies library dependencies into wheel
  - delocate-listdeps --all dist/*.whl # verify
  - rename_wheels dist
  - pip install dist/*.whl
  - cd ..

script:
  # make sure it's working without any required libraries installed
  - brew rm glib
  - brew rm gettext
  - mkdir tmp_for_test
  - cd tmp_for_test
  - nosetests --verbosity=3 --nocapture ../lensfunpy/test
  - cd ..

after_success:
  - cd lensfunpy
  - "if [[ \"`git log -n 1 --pretty=format:'%d'`\" =~ \"tag: v\" ]]; then
       travis_retry pip install twine ;
       twine upload -u neothemachine -p $PYPI_PASS dist/* ;
     fi"
